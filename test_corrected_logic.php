<?php

require_once 'vendor/autoload.php';

use App\Models\Cap;
use App\Models\Message;
use App\Models\Chat;
use App\Services\CapAnalysisService;

$app = require_once 'bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

echo "üß™ –¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ original_message_id\n\n";

$capAnalysisService = new CapAnalysisService();

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç
$chat = Chat::updateOrCreate(
    ['chat_id' => -1003333333333],
    ['title' => 'Test Chat', 'display_order' => 1]
);

// –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
Cap::where('affiliate_name', 'TEST_CORRECT')->delete();

// 1. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–∞–ø—É
$createMessage = Message::create([
    'chat_id' => $chat->id,
    'message_id' => 4001,
    'user_id' => 123,
    'message' => "Affiliate: TEST_CORRECT\nRecipient: BrokerZ\nCap: 25\nGeo: DE",
    'date' => now(),
    'is_bot' => false,
    'is_outgoing' => false
]);

$result1 = $capAnalysisService->analyzeAndSaveCapMessage($createMessage->id, $createMessage->message);
echo "–°–æ–∑–¥–∞–Ω–æ –∫–∞–ø: " . $result1['cap_entries_count'] . "\n";

$cap = Cap::where('affiliate_name', 'TEST_CORRECT')->first();
if ($cap && $cap->original_message_id === null) {
    echo "‚úÖ original_message_id = null –¥–ª—è –Ω–æ–≤–æ–π –∫–∞–ø—ã\n";
} else {
    echo "‚ùå original_message_id —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ\n";
}

// 2. –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ø—É
$updateMessage = Message::create([
    'chat_id' => $chat->id,
    'message_id' => 4002,
    'user_id' => 123,
    'message' => "Cap: 30\nGeo: DE",
    'date' => now(),
    'is_bot' => false,
    'is_outgoing' => false,
    'reply_to_message_id' => 4001
]);

$result2 = $capAnalysisService->analyzeAndSaveCapMessage($updateMessage->id, $updateMessage->message);
echo "–û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–∞–ø: " . $result2['updated_entries_count'] . "\n";

$updatedCap = Cap::where('affiliate_name', 'TEST_CORRECT')->first();
if ($updatedCap && $updatedCap->original_message_id == $updateMessage->id) {
    echo "‚úÖ original_message_id —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –æ–±–Ω–æ–≤–ª—è—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n";
} else {
    echo "‚ùå original_message_id –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –æ–±–Ω–æ–≤–ª—è—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n";
}

echo "\nÔøΩÔøΩ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!\n"; 